Graph #1:

LinkedVertex 1; Neighbors: 
	Vertex: 2 Weight: 6
	Vertex: 4 Weight: 7
LinkedVertex 2; Neighbors: 
	Vertex: 3 Weight: 5
	Vertex: 4 Weight: 8
	Vertex: 5 Weight: -4
LinkedVertex 3; Neighbors: 
	Vertex: 2 Weight: -2
LinkedVertex 4; Neighbors: 
	Vertex: 3 Weight: -3
	Vertex: 5 Weight: 9
LinkedVertex 5; Neighbors: 
	Vertex: 3 Weight: 7
	Vertex: 1 Weight: 2
SSSP: 
1->1 cost is  0; shortest path is 1
1->2 cost is  2; shortest path is 1->4->3->2
1->3 cost is  4; shortest path is 1->4->3
1->4 cost is  7; shortest path is 1->4
1->5 cost is -2; shortest path is 1->4->3->2->5


Graph #2: 

LinkedVertex 1; Neighbors: 
	Vertex: 2 Weight: 0
	Vertex: 5 Weight: 0
	Vertex: 6 Weight: 0
LinkedVertex 2; Neighbors: 
	Vertex: 3 Weight: 0
	Vertex: 5 Weight: 0
	Vertex: 6 Weight: 0
LinkedVertex 3; Neighbors: 
	Vertex: 4 Weight: 0
LinkedVertex 4; Neighbors: 
	Vertex: 5 Weight: 0
LinkedVertex 5; Neighbors: 
	Vertex: 3 Weight: 0
	Vertex: 6 Weight: 0
	Vertex: 7 Weight: 0
LinkedVertex 6; Neighbors: 
	Vertex: 7 Weight: 0
LinkedVertex 7; Neighbors: 
	No Neighbors
SSSP: 
1->1 cost is  0; shortest path is 1
1->2 cost is  0; shortest path is 1->2
1->3 cost is  0; shortest path is 1->2->3
1->4 cost is  0; shortest path is 1->2->3->4
1->5 cost is  0; shortest path is 1->5
1->6 cost is  0; shortest path is 1->6
1->7 cost is  0; shortest path is 1->5->7


Graph #3: 

LinkedVertex 1; Neighbors: 
	Vertex: 2 Weight: 1
	Vertex: 5 Weight: 1
	Vertex: 6 Weight: 1
LinkedVertex 2; Neighbors: 
	Vertex: 3 Weight: 1
	Vertex: 5 Weight: 1
	Vertex: 6 Weight: 1
LinkedVertex 3; Neighbors: 
	Vertex: 4 Weight: 1
LinkedVertex 4; Neighbors: 
	Vertex: 5 Weight: 1
LinkedVertex 5; Neighbors: 
	Vertex: 3 Weight: 1
	Vertex: 6 Weight: 1
	Vertex: 7 Weight: 1
LinkedVertex 6; Neighbors: 
	Vertex: 7 Weight: 1
LinkedVertex 7; Neighbors: 
	No Neighbors
SSSP: 
1->1 cost is  0; shortest path is 1
1->2 cost is  1; shortest path is 1->2
1->3 cost is  2; shortest path is 1->2->3
1->4 cost is  3; shortest path is 1->2->3->4
1->5 cost is  1; shortest path is 1->5
1->6 cost is  1; shortest path is 1->6
1->7 cost is  2; shortest path is 1->5->7


Graph #4: 

LinkedVertex 1; Neighbors: 
	Vertex: 2 Weight: 2
	Vertex: 5 Weight: 3
	Vertex: 6 Weight: 3
LinkedVertex 2; Neighbors: 
	Vertex: 3 Weight: 7
	Vertex: 5 Weight: -1
	Vertex: 6 Weight: 1
LinkedVertex 3; Neighbors: 
	Vertex: 4 Weight: 1
LinkedVertex 4; Neighbors: 
	Vertex: 5 Weight: -2
LinkedVertex 5; Neighbors: 
	Vertex: 3 Weight: 5
	Vertex: 6 Weight: 3
	Vertex: 7 Weight: 1
LinkedVertex 6; Neighbors: 
	Vertex: 7 Weight: 14
LinkedVertex 7; Neighbors: 
	No Neighbors
SSSP: 
1->1 cost is  0; shortest path is 1
1->2 cost is  2; shortest path is 1->2
1->3 cost is  6; shortest path is 1->2->5->3
1->4 cost is  7; shortest path is 1->2->5->3->4
1->5 cost is  1; shortest path is 1->2->5
1->6 cost is  3; shortest path is 1->6
1->7 cost is  2; shortest path is 1->2->5->7


Loading in Spices and Knapsacks!
Spice: 
	Color: red
	Total Price: 4
	Quantity: 4
	Unit Price: 1
Spice: 
	Color: green
	Total Price: 12
	Quantity: 6
	Unit Price: 2
Spice: 
	Color: blue
	Total Price: 40
	Quantity: 8
	Unit Price: 5
Spice: 
	Color: orange
	Total Price: 18
	Quantity: 2
	Unit Price: 9
New Knapsack: 1
New Knapsack: 6
New Knapsack: 10
New Knapsack: 20
New Knapsack: 21

Maximizing Take:
Knapsack of Capacity 1.00 is worth 9.00 quatloos and contains 1.00 scoops of orange.
Knapsack of Capacity 6.00 is worth 38.00 quatloos and contains 2.00 scoops of orange, 4.00 scoops of blue.
Knapsack of Capacity 10.00 is worth 58.00 quatloos and contains 2.00 scoops of orange, 8.00 scoops of blue.
Knapsack of Capacity 20.00 is worth 74.00 quatloos and contains 2.00 scoops of orange, 8.00 scoops of blue, 6.00 scoops of green, 4.00 scoops of red.
Knapsack of Capacity 21.00 is worth 74.00 quatloos and contains 2.00 scoops of orange, 8.00 scoops of blue, 6.00 scoops of green, 4.00 scoops of red.
